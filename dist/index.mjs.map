{"version":3,"file":"index.mjs","sources":["../src/index.js"],"sourcesContent":["'use strict'\n\nconst hash = string =>\n  Array.from(string).reduce(\n    (h, ch) => ((h << 5) - h + ch.charCodeAt(0)) & 0xffff,\n    0\n  )\n\nconst context = {\n  rules: [],\n  cache: {},\n  hasWindow: typeof window === 'object',\n  isTest:\n    typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_ENV !== 'production'\n}\n\nexport default function stylish (style) {\n  if (Array.isArray(style)) style = style[0]\n  let c = context.cache[style]\n  if (!c) c = context.cache[style] = buildStyle(style)\n  return c\n}\n\n/* istanbul ignore else */\nif (context.isTest) {\n  stylish.context = context\n  /* istanbul ignore if */\n  if (context.hasWindow) {\n    window.$tyli$h = context\n  }\n}\ncontext.stylesheet = createStylesheet()\n\nfunction createStylesheet () {\n  /* istanbul ignore if */\n  if (context.hasWindow) {\n    const el = window.document.createElement('style')\n    return window.document.head.appendChild(el).sheet\n  }\n}\n\nfunction buildStyle (style) {\n  const usi = `stylish-${hash(style).toString(16)}`\n  buildRules(style, usi).forEach(insertRule)\n  return usi\n}\n\nfunction insertRule (rule) {\n  context.rules.push(rule)\n  /* istanbul ignore if */\n  if (context.stylesheet) {\n    context.stylesheet.insertRule(rule, context.stylesheet.cssRules.length)\n  }\n}\n\nfunction buildRules (style, usi) {\n  style = style\n    .replace(/\\s*([,>+~;:}{]{1})\\s*/gm, '$1')\n    .trim()\n    .replace(/;}/g, '}')\n  const reSplit = /(.+?})/g\n  const rules = []\n  while (true) {\n    const match = reSplit.exec(style)\n    if (!match) break\n    let rule = match[1]\n    if (!/^(:root|@)/.test(rule)) {\n      if (!/:self/.test(rule)) rule = ':self ' + rule\n    }\n    rule = rule.replace(/:self/g, '.' + usi)\n    rules.push(rule)\n  }\n  return rules\n}\n"],"names":["const","hash","string","Array","from","reduce","h","ch","charCodeAt","context","rules","cache","hasWindow","window","isTest","process","env","NODE_ENV","stylish","style","isArray","c","usi","toString","replace","trim","reSplit","match","exec","rule","test","push","buildRules","forEach","insertRule","buildStyle","stylesheet","cssRules","length","$tyli$h","el","document","createElement","head","appendChild","sheet","createStylesheet"],"mappings":"AAEAA,IAAMC,WAAOC,UACXC,MAAMC,KAAKF,GAAQG,gBAChBC,EAAGC,UAASD,GAAK,GAAKA,EAAIC,EAAGC,WAAW,GAAM,OAC/C,IAGEC,EAAU,CACdC,MAAO,GACPC,MAAO,GACPC,UAA6B,iBAAXC,OAClBC,OACqB,iBAAZC,SACPA,QAAQC,KACiB,eAAzBD,QAAQC,IAAIC,UAGD,SAASC,EAASC,GAC3BhB,MAAMiB,QAAQD,KAAQA,EAAQA,EAAM,QACpCE,EAAIZ,EAAQE,MAAMQ,UACjBE,IAAGA,EAAIZ,EAAQE,MAAMQ,GAsB5B,SAAqBA,OACbG,EAAO,WAAUrB,EAAKkB,GAAOI,SAAS,WAa9C,SAAqBJ,EAAOG,GAC1BH,EAAQA,EACLK,QAAQ,0BAA2B,MACnCC,OACAD,QAAQ,MAAO,aACZE,EAAU,UACVhB,EAAQ,KACD,KACLiB,EAAQD,EAAQE,KAAKT,OACtBQ,EAAO,UACRE,EAAOF,EAAM,GACZ,aAAaG,KAAKD,IAChB,QAAQC,KAAKD,KAAOA,EAAO,SAAWA,GAE7CA,EAAOA,EAAKL,QAAQ,SAAU,IAAMF,GACpCZ,EAAMqB,KAAKF,UAENnB,EA7BPsB,CAAWb,EAAOG,GAAKW,QAAQC,GACxBZ,EAzB4Ba,CAAWhB,IACvCE,EA2BT,SAASa,EAAYL,GACnBpB,EAAQC,MAAMqB,KAAKF,GAEfpB,EAAQ2B,YACV3B,EAAQ2B,WAAWF,WAAWL,EAAMpB,EAAQ2B,WAAWC,SAASC,QA3BhE7B,EAAQK,SACVI,EAAQT,QAAUA,EAEdA,EAAQG,YACVC,OAAO0B,QAAU9B,IAGrBA,EAAQ2B,WAER,cAEM3B,EAAQG,UAAW,KACf4B,EAAK3B,OAAO4B,SAASC,cAAc,gBAClC7B,OAAO4B,SAASE,KAAKC,YAAYJ,GAAIK,OAN3BC"}